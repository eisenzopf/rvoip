[package]
name = "rvoip-audio-core"
# ðŸŽ¯ INHERIT VERSION AND METADATA FROM WORKSPACE!
version.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
documentation.workspace = true
authors.workspace = true
rust-version.workspace = true
categories.workspace = true
keywords.workspace = true

# Crate-specific description
description = "Comprehensive audio handling for VoIP applications with device management and format conversion"

# âœ¨ INHERIT LINTS FROM WORKSPACE
[lints]
workspace = true

[dependencies]
# ðŸŽ¯ INTERNAL CRATES - Use workspace dependencies (no version needed!)
rvoip-session-core.workspace = true
rvoip-rtp-core.workspace = true
rvoip-client-core = { workspace = true, optional = true }

# Audio device access
cpal = { version = "0.15", optional = true }

# Audio processing and format conversion
dasp = { version = "0.11", features = ["std", "signal", "interpolate", "interpolate-linear"], optional = true }

# Async runtime and utilities
tokio = { version = "1.0", features = ["full"] }

# Data structures and utilities
uuid = { version = "1.0", features = ["v4", "serde"] }
serde = { version = "1.0", features = ["derive"] }

# Logging and error handling
thiserror = "1.0"

# Time and synchronization
chrono = { version = "0.4", features = ["serde"] }

[dev-dependencies]
tokio-test = "0.4"
tracing-test = "0.2"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
serial_test = "3.1"

[features]
default = ["format-conversion", "device-cpal"]

# Device backend features
device-cpal = ["cpal"]
device-mock = []
test-audio = ["device-mock"]

# Format conversion features
format-conversion = ["dasp"]
format-advanced = ["format-conversion"]

# Client integration features
client-integration = ["rvoip-client-core"]

# Audio processing features (future)
processing-aec = []
processing-agc = []
processing-noise = []
processing-vad = []
processing-all = ["processing-aec", "processing-agc", "processing-noise", "processing-vad"]

# All features
full = ["processing-all"]

# Example configurations
# Examples will be implemented in future phases 