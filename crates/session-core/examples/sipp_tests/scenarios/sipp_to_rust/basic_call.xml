<?xml version="1.0" encoding="ISO-8859-1" ?>
<scenario name="Basic Call to Rust SIP Test Server">
  
  <!-- Send INVITE -->
  <send retrans="500">
    <![CDATA[
      INVITE sip:test@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/UDP [local_ip]:[local_port];branch=[branch]
      From: SIPp Test <sip:sipp@[local_ip]:[local_port]>;tag=[pid]SIPpTag00[call_number]
      To: Test User <sip:test@[remote_ip]:[remote_port]>
      Call-ID: [call_id]
      CSeq: 1 INVITE
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: SIPp Basic Call Test
      User-Agent: SIPp/3.6.1
      Content-Type: application/sdp
      Content-Length: [len]

      v=0
      o=user1 53655765 2353687637 IN IP4 [local_ip]
      s=SIPp Test Session
      c=IN IP4 [media_ip]
      t=0 0
      m=audio [auto_media_port] RTP/AVP 0 8
      a=rtpmap:0 PCMU/8000
      a=rtpmap:8 PCMA/8000
      a=sendrecv
    ]]>
  </send>

  <!-- Optional 100 Trying -->
  <recv response="100" optional="true">
  </recv>

  <!-- Optional 180 Ringing -->
  <recv response="180" optional="true">
  </recv>

  <!-- Expect 200 OK -->
  <recv response="200" rtd="true">
    <action>
      <ereg regexp=".*" search_in="hdr" header="Contact" assign_to="contact_uri"/>
      <log message="ðŸ“ž Call answered! Contact: [$contact_uri]"/>
    </action>
  </recv>

  <!-- Send ACK -->
  <send>
    <![CDATA[
      ACK sip:test@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/UDP [local_ip]:[local_port];branch=[branch]
      From: SIPp Test <sip:sipp@[local_ip]:[local_port]>;tag=[pid]SIPpTag00[call_number]
      To: Test User <sip:test@[remote_ip]:[remote_port]>[peer_tag_param]
      Call-ID: [call_id]
      CSeq: 1 ACK
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: SIPp Basic Call Test
      User-Agent: SIPp/3.6.1
      Content-Length: 0
    ]]>
  </send>

  <!-- Simulate call established - send RTP for 5 seconds -->
  <nop>
    <action>
      <log message="ðŸŽ‰ Call established - starting RTP audio"/>
    </action>
  </nop>
  
  <!-- Hold the call for 5 seconds (simulates media exchange) -->
  <pause milliseconds="5000"/>

  <!-- Send BYE to terminate call -->
  <send retrans="500">
    <![CDATA[
      BYE sip:test@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/UDP [local_ip]:[local_port];branch=[branch]
      From: SIPp Test <sip:sipp@[local_ip]:[local_port]>;tag=[pid]SIPpTag00[call_number]
      To: Test User <sip:test@[remote_ip]:[remote_port]>[peer_tag_param]
      Call-ID: [call_id]
      CSeq: 2 BYE
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: SIPp Basic Call Test
      User-Agent: SIPp/3.6.1
      Content-Length: 0
    ]]>
  </send>

  <!-- Expect 200 OK for BYE -->
  <recv response="200">
    <action>
      <log message="ðŸ“´ Call terminated successfully"/>
    </action>
  </recv>

  <!-- Test completed successfully -->
  <nop>
    <action>
      <log message="âœ… Basic call test completed successfully"/>
    </action>
  </nop>

</scenario> 