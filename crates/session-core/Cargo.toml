[package]
name = "rvoip-session-core"
version.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
documentation.workspace = true
authors.workspace = true
rust-version.workspace = true
categories.workspace = true
keywords.workspace = true

# Crate-specific description
description = "Call session management for the rvoip stack"

# âœ¨ INHERIT LINTS FROM WORKSPACE (no need to duplicate!)
[lints]
workspace = true

[dependencies]
# ðŸŽ¯ INTERNAL CRATES - Use workspace dependencies (no version needed!)
# session-core uses dialog-core for SIP and media-core for media processing
# Following proper separation of concerns: NO direct rtp-core dependency
rvoip-sip-core.workspace = true
rvoip-transaction-core.workspace = true
rvoip-dialog-core.workspace = true
rvoip-sip-transport.workspace = true
rvoip-media-core.workspace = true
infra-common.workspace = true

# External dependencies from workspace
tokio.workspace = true
tokio-util = "0.7"
thiserror.workspace = true
anyhow.workspace = true
bytes.workspace = true
uuid.workspace = true
chrono.workspace = true
dashmap.workspace = true
parking_lot.workspace = true
rand.workspace = true
serde.workspace = true
serde_json.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true
clap.workspace = true
async-trait.workspace = true
futures.workspace = true

[dev-dependencies]
tokio.workspace = true
proptest.workspace = true
# Crate-specific dev dependencies that aren't in workspace
tracing-appender = "0.2"
fastrand = "2.0"
serial_test = "3.1"
hound = "3.5"

# Example binaries
[[bin]]
name = "uas_server"
path = "examples/client-server/uas_server.rs"

[[bin]]
name = "uac_client"
path = "examples/client-server/uac_client.rs"

[[bin]]
name = "simple_peer_to_peer"
path = "examples/peer-to-peer/simple_peer_to_peer.rs"

[[bin]]
name = "uac_client_clean"
path = "examples/api_best_practices/uac_client_clean.rs"

[[bin]]
name = "uas_server_clean"
path = "examples/api_best_practices/uas_server_clean.rs"
