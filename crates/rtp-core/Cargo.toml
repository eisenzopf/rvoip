[package]
name = "rvoip-rtp-core"
version = "0.1.3"
edition = "2021"
description = "RTP packet encoding/decoding, RTCP support for rvoip"
authors = ["RVOIP Team"]
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/rvoip-rtp-core"
homepage = "https://github.com/eisenzopf/rvoip"
repository = "https://github.com/eisenzopf/rvoip"

# Silence all Rust warnings and configure clippy
[lints.rust]
warnings = "allow"
unused_imports = "allow"
unused_variables = "allow"
unused_mut = "allow"
dead_code = "allow"
unused_comparisons = "allow"
elided_named_lifetimes = "allow"
ambiguous_glob_reexports = "allow"
deprecated = "allow"
unexpected_cfgs = "allow"
unreachable_patterns = "allow"
irrefutable_let_patterns = "allow"
unused_assignments = "allow"

[lints.clippy]
# Allow stylistic and pedantic lints that don't affect correctness
pedantic = "allow"
style = "allow"
complexity = "allow"
perf = "allow"
cargo = "allow"
nursery = "allow"

# Keep important correctness lints as warnings/errors
correctness = "warn"
suspicious = "warn"
restriction = "allow"

# Allow specific common patterns that are acceptable
len_zero = "allow"
len_without_is_empty = "allow"
new_without_default = "allow"
too_many_arguments = "allow"
module_inception = "allow"
single_match = "allow"
match_like_matches_macro = "allow"
redundant_pattern_matching = "allow"
needless_option_as_deref = "allow"
unnecessary_filter_map = "allow"
bool_assert_comparison = "allow"
bool_comparison = "allow"
comparison_to_empty = "allow"
explicit_auto_deref = "allow"
unnecessary_get_then_check = "allow"
needless_borrows_for_generic_args = "allow"
assertions_on_constants = "allow"
expect_fun_call = "allow"
option_as_ref_deref = "allow"
useless_conversion = "allow"
unnecessary_literal_unwrap = "allow"
vec_init_then_push = "allow"
useless_vec = "allow"
redundant_closure = "allow"
items_after_test_module = "allow"
approx_constant = "allow"
partialeq_to_none = "allow"
legacy_numeric_constants = "allow"
absurd_extreme_comparisons = "allow"
cast_abs_to_unsigned = "allow"
empty_line_after_doc_comments = "allow"
multiple_bound_locations = "allow"
should_implement_trait = "allow"
manual_find = "allow"
collapsible_else_if = "allow"

[dependencies]
bytes = "1.5.0"
thiserror = "1.0.56"
tokio = { version = "1.35.1", features = ["rt", "rt-multi-thread", "sync", "net", "time", "macros", "full"] }
tracing = "0.1.40"
tracing-subscriber = "0.3"
bitvec = "1.0"
rand = "0.8.5"
async-trait = "0.1"
base64 = "0.13"
log = "0.4"
futures = "0.3.30"
hostname = "0.3"
once_cell = "1.10"
parking_lot = "0.12.1"
# Cryptographic dependencies for DTLS
hmac = "0.12.1"
sha1 = "0.10"
sha2 = "0.10.8"
aes = "0.8"
ctr = "0.9"
aes-gcm = "0.10.3"
p256 = { version = "0.13.2", features = ["ecdh"] }
x509-parser = "0.15.1"
rcgen = "0.11.3"
webrtc-dtls = "0.9.0"
rsa = "0.9.6"
ring = "0.17"
rustls = { version = "0.21", features = ["dangerous_configuration"] }
rustls-pemfile = "1.0.4"
serde = { version = "1.0", features = ["derive"] }
uuid = { version = "1.6.1", features = ["v4"] }
either = "1.9.0"
nix = { version = "0.27.1", features = ["socket"] }
libc = "0.2"
winapi = { version = "0.3", features = ["winsock2", "ws2def"] }
time = { version = "0.3", features = ["std"] }

[dev-dependencies]
tokio-test = "0.4"

[[example]]
name = "dtls_test"
path = "examples/dtls_test.rs"

[[example]]
name = "media_api_usage"
path = "examples/media_api_usage.rs" 