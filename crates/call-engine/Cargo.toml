[package]
name = "rvoip-call-engine"
version = "0.1.4"
edition = "2021"
description = "Call routing and business logic for the rvoip stack"
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/rvoip-call-engine"
homepage = "https://github.com/eisenzopf/rvoip"
repository = "https://github.com/eisenzopf/rvoip"

# Silence all Rust warnings and configure clippy
[lints.rust]
warnings = "allow"
unused_imports = "allow"
unused_variables = "allow"
unused_mut = "allow"
dead_code = "allow"
unused_comparisons = "allow"
elided_named_lifetimes = "allow"
ambiguous_glob_reexports = "allow"
deprecated = "allow"
unexpected_cfgs = "allow"
unreachable_patterns = "allow"
irrefutable_let_patterns = "allow"
unused_assignments = "allow"
async_fn_in_trait = "allow"

[lints.clippy]
# Allow stylistic and pedantic lints that don't affect correctness
pedantic = "allow"
style = "allow"
complexity = "allow"
perf = "allow"
cargo = "allow"
nursery = "allow"

# Keep important correctness lints as warnings/errors
correctness = "warn"
suspicious = "warn"
restriction = "allow"

# Allow specific common patterns that are acceptable
len_zero = "allow"
len_without_is_empty = "allow"
new_without_default = "allow"
too_many_arguments = "allow"
module_inception = "allow"
single_match = "allow"
match_like_matches_macro = "allow"
redundant_pattern_matching = "allow"
needless_option_as_deref = "allow"
unnecessary_filter_map = "allow"
bool_assert_comparison = "allow"
bool_comparison = "allow"
comparison_to_empty = "allow"
explicit_auto_deref = "allow"
unnecessary_get_then_check = "allow"
needless_borrows_for_generic_args = "allow"
assertions_on_constants = "allow"
expect_fun_call = "allow"
option_as_ref_deref = "allow"
useless_conversion = "allow"
unnecessary_literal_unwrap = "allow"
vec_init_then_push = "allow"
useless_vec = "allow"
redundant_closure = "allow"
items_after_test_module = "allow"
approx_constant = "allow"
partialeq_to_none = "allow"
legacy_numeric_constants = "allow"
absurd_extreme_comparisons = "allow"
cast_abs_to_unsigned = "allow"
empty_line_after_doc_comments = "allow"
multiple_bound_locations = "allow"
should_implement_trait = "allow"
manual_find = "allow"
collapsible_else_if = "allow"

[dependencies]
# Workspace crates
rvoip-sip-core = { path = "../sip-core", version = "0.1.4" }
rvoip-session-core = { path = "../session-core", version = "0.1.4" }

# Database - Modern async approach with sqlx
# Replace rusqlite/r2d2 with sqlx for true async support
sqlx = { version = "0.7", features = [
    "runtime-tokio-rustls",
    "sqlite", 
    "chrono", 
    "uuid",
    "migrate",
    "macros"
] }

# Web framework
axum = "0.7"

# Async runtime
tokio = { workspace = true, features = ["full"] }
async-trait = "0.1"

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Utilities
bytes = { workspace = true }
uuid = { workspace = true, features = ["v4", "serde"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# Logging
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

# Collections
dashmap = "5.5"
parking_lot = "0.12"

# For examples
clap = { version = "4.5", features = ["derive"] }
rvoip-client-core = { path = "../client-core", version = "0.1.1" }

[dev-dependencies]
# Testing
tokio-test = "0.4"
serial_test = "3.1"

# Benchmarking
criterion = { version = "0.5", features = ["html_reports", "async_tokio"] }

[[example]]
name = "e2e_test_server"
path = "examples/e2e_test/server/basic_call_center_server.rs"

[[example]]
name = "e2e_test_agent"
path = "examples/e2e_test/agent/agent_client.rs" 
