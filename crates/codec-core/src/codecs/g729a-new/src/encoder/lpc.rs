use crate::common::basic_operators::*;

const LPC_WINDOW: [Word16; 240] = [
    1342, 1343, 1347, 1353, 1362, 1373, 1387, 1404, 1423, 1445, 1469, 1496, 1525, 1557, 1591, 1628, 1667, 1709, 1753, 1800, 1849, 1901, 1955, 2012, 2071, 2133, 2197, 2264, 2333, 2405, 2479, 2555, 2634, 2715, 2798, 2884, 2972, 3062, 3154, 3249, 3346, 3445, 3546, 3649, 3755, 3862, 3972, 4083, 4197, 4312, 4429, 4548, 4669, 4792, 4916, 5043, 5171, 5301, 5433, 5566, 5701, 5838, 5976, 6116, 6258, 6401, 6545, 6691, 6838, 6987, 7137, 7288, 7441, 7595, 7750, 7906, 8064, 8222, 8382, 8543, 8705, 8868, 9032, 9197, 9363, 9530, 9698, 9867, 10036, 10206, 10377, 10549, 10721, 10894, 11067, 11241, 11415, 11590, 11765, 11941, 12117, 12293, 12470, 12647, 12824, 13001, 13179, 13357, 13535, 13713, 13891, 14069, 14247, 14425, 14603, 14781, 14959, 15137, 15314, 15491, 15668, 15845, 16022, 16198, 16374, 16550, 16726, 16901, 17076, 17251, 17425, 17599, 17772, 17945, 18117, 18289, 18460, 18631, 18801, 18971, 19140, 19308, 19476, 19643, 19810, 19976, 20141, 20306, 20470, 20633, 20796, 20958, 21119, 21279, 21439, 21597, 21755, 21912, 22068, 22223, 22377, 22530, 22682, 22834, 22984, 23134, 23282, 23430, 23576, 23722, 23866, 24009, 24151, 24292, 24432, 24571, 24708, 24845, 24980, 25114, 25247, 25378, 25508, 25637, 25765, 25891, 26016, 26140, 26262, 26383, 26503, 26621, 26738, 26854, 26968, 27081, 27192, 27302, 27411, 27518, 27624, 27728, 27831, 27932, 28032, 28130, 28227, 28322, 28416, 28508, 28599, 28688, 28776, 28862, 28947, 29030, 29112, 29192, 29271, 29348, 29424, 29498, 29570, 29641, 29710, 29778, 29844, 29908, 29971, 30032, 30091, 30149, 30205, 30259, 30312, 30363, 30412, 30460, 30506, 30550, 30593, 30634, 30673, 30711, 30747, 30781, 30814, 30845, 30874, 30902, 30928, 30952, 30974, 30995, 31014, 31031, 31047, 31061, 31073, 31083, 31092, 31099, 31104, 31107, 31109, 31108, 31106, 31102, 31096, 31088, 31079, 31067, 31054, 31039, 31022, 31003, 30983, 30960, 30936, 30910, 30882, 30852, 30821, 30787, 30752, 30715, 30676, 30635, 30593, 30548, 30502, 30454, 30404, 30352, 30299, 30244, 30187, 30128, 30068, 30006, 29942, 29876, 29809, 29740, 29669, 29596, 29522, 29446, 29368, 29289, 29208, 29125, 29041, 28955, 28867, 28778, 28687, 28594, 28500, 28404, 28307, 28208, 28107, 28005, 27901, 27796, 27689, 27581, 27471, 27360, 27247, 27133, 27017, 26900, 26781, 26661, 26539, 26416, 26292, 26166, 26039, 25911, 25781, 25650, 25518, 25384, 25249, 25113, 24976, 24837, 24697, 24556, 24414, 24270, 24125, 23979, 23832, 23684, 23534, 23384, 23232, 23079, 22925, 22770, 22614, 22457, 22298, 22139, 21978, 21817, 21654, 21490, 21325, 21159, 20992, 20824, 20655, 20485, 20314, 20142, 19969, 19795, 19620, 19444, 19267, 19089, 18910, 18730, 18549, 18367, 18184, 18000, 17815, 17629, 17442, 17255, 17066, 16877, 16687, 16496, 16304, 16111, 15918, 15723, 15528, 15332, 15135, 14937, 14738, 14539, 14338, 14137, 13935, 13732, 13528, 13324, 13119, 12913, 12706, 12499, 12291, 12082, 11873, 11663, 11452, 11241, 11029, 10816, 10603, 10389, 10174, 9959, 9743, 9526, 9309, 9091, 8873, 8654, 8434, 8214, 7993, 7772, 7550, 7327, 7104, 6880, 6656, 6431, 6206, 5980, 5754, 5527, 5300, 5072, 4844, 4616, 4387, 4158, 3928, 3698, 3468, 3237, 3006, 2775, 2543, 2311, 2079, 1846, 1614, 1381, 1148, 915, 682, 449, 216, -17, -250, -483, -716, -949, -1182, -1415, -1648, -1881, -2114, -2347, -2580, -2813, -3046, -3279, -3512, -3745, -3978, -4211, -4444, -4677, -4910, -5143, -5376, -5609, -5842, -6075, -6308, -6541, -6774, -7007, -7240, -7473, -7706, -7939, -8172, -8405, -8638, -8871, -9104, -9337, -9570, -9803, -10036, -10269, -10502, -10735, -10968, -11201, -11434, -11667, -11900, -12133, -12366, -12599, -12832, -13065, -13298, -13531, -13764, -13997, -14230, -14463, -14696, -14929, -15162, -15395, -15628, -15861, -16094, -16327, -16560, -16793, -17026, -17259, -17492, -17725, -17958, -18191, -18424, -18657, -18890, -19123, -19356, -19589, -19822, -20055, -20288, -20521, -20754, -20987, -21220, -21453, -21686, -21919, -22152, -22385, -22618, -22851, -23084, -23317, -23550, -23783, -24016, -24249, -24482, -24715, -24948, -25181, -25414, -25647, -25880, -26113, -26346, -26579, -26812, -27045, -27278, -27511, -27744, -27977, -28210, -28443, -28676, -28909, -29142, -29375, -29608, -29841, -30074, -30307, -30540, -30773, -31006, -31239, -31472, -31705, -31938, -32171, -32404, -32637
];

const LAG_WINDOW: [Word16; 10] = [32766, 32761, 32752, 32739, 32722, 32701, 32676, 32647, 32614, 32577];

pub fn autocorrelation(speech: &[Word16], r: &mut [Word32]) {
    let mut s_prime = [0i16; 240];
    for i in 0..240 {
        s_prime[i] = shr(round(L_mult(speech[i], LPC_WINDOW[i])), 1);
    }

    for k in 0..=10 {
        let mut sum: Word32 = 0;
        for n in k..240 {
            sum = L_mac(sum, s_prime[n], s_prime[n - k]);
        }
        r[k] = sum;
    }

    let r0 = r[0];
    r[0] = L_mac(r[0], round(L_mult(r0 as Word16, 1)), 1);

    for k in 1..=10 {
        r[k] = L_mult(r[k] as Word16, LAG_WINDOW[k-1]);
    }
}

pub fn levinson_durbin(r: &[Word32], a: &mut [Word16]) {
    let mut rc = [0i16; 10];
    let mut ac = [0i16; 11];
    let mut old_a = [0i16; 10];
    let mut e: Word32 = r[0];

    ac[0] = 4096; // 1.0 in Q12

    for i in 0..10 {
        let mut s: Word32 = 0;
        for j in 0..=i {
            s = L_mac(s, ac[j], r[i + 1 - j] as Word16);
        }
        rc[i] = -round(L_shl(s, 16) / e);

        for j in 0..=i {
            old_a[j] = ac[j];
        }

        for j in 1..=i + 1 {
            ac[j] = round(L_mac(L_mult(old_a[j], 4096), rc[i], old_a[i + 1 - j]));
        }

        e = L_mac(L_mult(e as Word16, 4096), -round(L_mult(rc[i], rc[i])), e as Word16);
    }

    for i in 0..11 {
        a[i] = ac[i];
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_lpc() {
        let speech = [8192; 240];
        let mut r = [0; 11];
        let mut a = [0; 11];

        autocorrelation(&speech, &mut r);
        levinson_durbin(&r, &mut a);

        let expected_a = [4096, -3463, 2116, -1025, 392, -118, 26, -3, 0, 0, 0];
        assert_eq!(a, expected_a);
    }
}
