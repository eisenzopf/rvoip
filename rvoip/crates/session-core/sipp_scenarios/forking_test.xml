<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- Forking Test Scenario for Session-Core Testing -->
<!-- This scenario tests forking with multiple early dialogs -->

<scenario name="Forking Test">
  
  <!-- Send INVITE with SDP -->
  <send retrans="500">
    <![CDATA[
      INVITE sip:fork@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[pid]SIPpTag00[call_number]
      To: fork <sip:fork@[remote_ip]:[remote_port]>
      Call-ID: [call_id]
      CSeq: 1 INVITE
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Forking Test
      Content-Type: application/sdp
      Content-Length: [len]

      v=0
      o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
      s=-
      c=IN IP[local_ip_type] [local_ip]
      t=0 0
      m=audio 6000 RTP/AVP 0
      a=rtpmap:0 PCMU/8000
    ]]>
  </send>

  <!-- Expect 100 Trying (optional) -->
  <recv response="100" optional="true">
  </recv>

  <!-- Expect first 180 Ringing (early dialog 1) -->
  <recv response="180" optional="true">
    <action>
      <ereg regexp="tag=([^;]+)" search_in="hdr" header="To" assign_to="early_tag_1"/>
    </action>
  </recv>

  <!-- Expect second 180 Ringing (early dialog 2) -->
  <recv response="180" optional="true">
    <action>
      <ereg regexp="tag=([^;]+)" search_in="hdr" header="To" assign_to="early_tag_2"/>
    </action>
  </recv>

  <!-- Expect third 180 Ringing (early dialog 3) -->
  <recv response="180" optional="true">
    <action>
      <ereg regexp="tag=([^;]+)" search_in="hdr" header="To" assign_to="early_tag_3"/>
    </action>
  </recv>

  <!-- Expect 200 OK from one of the forked branches -->
  <recv response="200" rtd="true">
    <action>
      <ereg regexp="&lt;([^&gt;]+)&gt;" search_in="hdr" header="Contact" assign_to="contact_uri"/>
      <ereg regexp="tag=([^;]+)" search_in="hdr" header="To" assign_to="final_tag"/>
    </action>
  </recv>

  <!-- Send ACK to the winning branch -->
  <send>
    <![CDATA[
      ACK [$contact_uri] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[pid]SIPpTag00[call_number]
      To: fork <sip:fork@[remote_ip]:[remote_port]>;tag=[$final_tag]
      Call-ID: [call_id]
      CSeq: 1 ACK
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Content-Length: 0
    ]]>
  </send>

  <!-- Hold the call for 2 seconds -->
  <pause milliseconds="2000"/>

  <!-- Send BYE to terminate the call -->
  <send retrans="500">
    <![CDATA[
      BYE [$contact_uri] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[pid]SIPpTag00[call_number]
      To: fork <sip:fork@[remote_ip]:[remote_port]>;tag=[$final_tag]
      Call-ID: [call_id]
      CSeq: 2 BYE
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Content-Length: 0
    ]]>
  </send>

  <!-- Expect 200 OK for BYE -->
  <recv response="200" crlf="true">
  </recv>

  <!-- Forking test completed successfully -->
  
</scenario> 