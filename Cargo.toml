[workspace]
resolver = "2"

members = [
    "crates/sip-core",
    "crates/sip-transport",
    "crates/transaction-core",
    "crates/dialog-core",
    "crates/rtp-core",
    "crates/media-core",
    "crates/session-core",
    "crates/call-engine",
    "crates/client-core",
    "crates/infra-common",
    "crates/session-core/examples/sipp_tests",
]

# Root package that re-exports all crates
[package]
name = "rvoip"
version = "0.1.1"
edition = "2021"
description = "A comprehensive VoIP library for Rust"
license = "MIT OR Apache-2.0"
repository = "https://github.com/your-username/rvoip"
authors = ["Your Name <your-email@example.com>"]

[dependencies]
# Re-export all the crates in the workspace
rvoip-sip-core = { path = "crates/sip-core", version = "0.1.1" }
rvoip-sip-transport = { path = "crates/sip-transport", version = "0.1.1" }
rvoip-transaction-core = { path = "crates/transaction-core", version = "0.1.1" }
rvoip-dialog-core = { path = "crates/dialog-core", version = "0.1.1" }
rvoip-rtp-core = { path = "crates/rtp-core", version = "0.1.1" }
rvoip-media-core = { path = "crates/media-core", version = "0.1.1" }
rvoip-session-core = { path = "crates/session-core", version = "0.1.1" }
rvoip-call-engine = { path = "crates/call-engine", version = "0.1.1" }
rvoip-client-core = { path = "crates/client-core", version = "0.1.1" }

# Silence all Rust warnings
[workspace.lints.rust]
warnings = "allow"

[workspace.dependencies]
# Async runtime
tokio = { version = "1.36", features = ["full"] }
# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
# Error handling
thiserror = "1.0"
anyhow = "1.0"
# Utilities
bytes = { version = "1.5", features = ["serde"] }
uuid = { version = "1.7", features = ["v4", "serde"] }
# HTTP/API
axum = "0.7"
tower = "0.4"
tower-http = { version = "0.5", features = ["trace", "cors"] }
# Testing
proptest = "1.4" 

# ðŸ”§ Optimization Profiles for Binary Size Reduction

[profile.release]
# Standard release with size optimizations
opt-level = "s"           # Optimize for size instead of speed
lto = true               # Link-time optimization for dead code elimination
codegen-units = 1        # Better optimization (slower compile, smaller binary)
panic = "abort"          # Remove panic handling code (smaller binary)
strip = true             # Remove debug symbols from binary

[profile.release-small]
# Aggressive size optimization (smallest possible binary)
inherits = "release"
opt-level = "z"          # Aggressive size optimization
lto = "fat"              # Maximum link-time optimization
codegen-units = 1        # Single compilation unit for best optimization
panic = "abort"          # No panic unwinding code
strip = "symbols"        # Strip all symbols
overflow-checks = false  # Disable overflow checks in release
debug = false            # No debug info
rpath = false            # No runtime library path

[profile.release-fast]
# Speed-optimized release (larger binary, maximum performance)
inherits = "release"
opt-level = 3            # Maximum speed optimization
lto = "thin"             # Light link-time optimization
codegen-units = 16       # Parallel compilation
panic = "unwind"         # Standard panic behavior
debug = false            # No debug info 
